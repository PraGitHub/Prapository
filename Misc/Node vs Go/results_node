E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  182307
before calling quick sort 2019-02-13T06:33:03.341Z   1550039583341
after calling quick sort 2019-02-13T06:33:03.691Z   1550039583691
before calling bubble sort 2019-02-13T06:33:03.692Z   1550039583692
after calling bubble sort 2019-02-13T06:37:00.964Z   1550039820964

---------------------------------------------------------------------------

E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  182307
before calling quick sort 2019-02-13T07:10:49.867Z   1550041849867
after calling quick sort 2019-02-13T07:10:50.212Z   1550041850212
before calling bubble sort 2019-02-13T07:10:50.212Z   1550041850212
after calling bubble sort 2019-02-13T07:14:57.392Z   1550042097392

--------------------------------------------------------------------------
with random pivot , it results in stack overflow for higher values of n
--------------------------------------------------------------------------
E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  182307
before calling quick sort 2019-02-13T07:07:17.559Z   1550041637559
E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:6
function quickSort(origArray) {
                  ^

RangeError: Maximum call stack size exceeded
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:6:19)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)

E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  182307
before calling quick sort 2019-02-13T07:10:34.490Z   1550041834490
E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:6
function quickSort(origArray) {
                  ^

RangeError: Maximum call stack size exceeded
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:6:19)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
    at quickSort (E:\MyLearnings\Prapository\Misc\Node vs Go\sort.js:26:26)
----------------------------------------------------------------------------------------------------

E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  364613
before calling quick sort 2019-02-13T07:32:35.918Z   1550043155918
after calling quick sort 2019-02-13T07:32:37.278Z   1550043157278
before calling bubble sort 2019-02-13T07:32:37.279Z   1550043157279
after calling bubble sort 2019-02-13T07:50:54.620Z   1550044254620

----------------------------------------------------------------------------------------------------

E:\MyLearnings\Prapository\Misc\Node vs Go>node sort.js
n =  364613
before calling quick sort 2019-02-13T08:07:32.806Z   1550045252806
after calling quick sort 2019-02-13T08:07:33.923Z   1550045253923
before calling bubble sort 2019-02-13T08:07:33.923Z   1550045253923
after calling bubble sort 2019-02-13T08:26:30.316Z   1550046390316

----------------------------------------------------------------------------------------------------